
# Copyright (C) 2010 ST-Ericsson AS
# Author: Erwan Bracq / erwan.bracq@stericsson.com

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http:

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# See the NOTICE file distributed with this work for additional
# information regarding copyright ownership.


# Modem Init Daemon (MID) configuration file

####### SHELL COMMANDS SECTION ######

# Modem init command. One time command executed when MID starts.
normal_modem_init_cmd = "";
itp_modem_init_cmd = "";
service_modem_init_cmd = "";

# Modem preflash command. Operation to execute before flashing the modem (flashed configuration) or firmware upload (flashless configuration)
normal_modem_prefl_cmd = "insmod /system/lib/modules/hsi_char.ko channels_map=1";
itp_modem_prefl_cmd = "";
service_modem_prefl_cmd = "";


recovery_modem_prefl_cmd = "insmod /vendor/lib/modules/hsi_char.ko channels_map=1";


# Modem postflash command. Operation to execute after flashing the modem (flashed configuration) or firmware upload (flashless configuration)
normal_modem_postfl_cmd = "rmmod hsi_char;";
itp_modem_postfl_cmd = "";
service_modem_postfl_cmd = "";

# Modem interface up commands. Operartion to execute when modem interface is up
# Not used for Service mode
normal_modem_ifup_cmd = "insmod /system/lib/modules/caif_hsi.ko &&
                         insmod /system/lib/modules/hsi_omap.ko sw_reset_on_cfhsi_up=1 &&
                         ifconfig cfhsi0 up";
itp_modem_ifup_cmd = "";
service_modem_ifup_cmd = "";


# Modem pre crash command. Operation to execute before a crash dump
# Not used for ITP and Service mode
normal_modem_pre_crashdump_cmd = "insmod /system/lib/modules/hsi_char.ko channels_map=1;";
itp_modem_pre_crashdump_cmd = "";
service_modem_pre_crashdump_cmd = "";

# Modem post crash command. Operation to execute after a crash dump
# Not used for ITP and Service mode
normal_modem_post_crashdump_cmd = "rmmod hsi_char;";
itp_modem_post_crashdump_cmd = "";
service_modem_post_crashdump_cmd = "";

# Modem on commands. Operation to execute when modem is on
# Not used for Service mode



normal_modem_on_cmd = "";

itp_modem_on_cmd = "";
service_modem_on_cmd = "";

# Modem off commands. Operation to execute when modem is off
# Not used for Service mode
normal_modem_off_cmd = "ifconfig cfhsi0 down; rmmod hsi_omap; rmmod caif_hsi; rmmod hsi_char;";
itp_modem_off_cmd = "";
service_modem_off_cmd = "";


# Command to set the modem mode android property and start atrelay
normal_modem_mode_cmd="stop atrelay-itp && stop atrelay-sig && stop atrelay-svc && sleep 2 && start atrelay-sig";
itp_modem_mode_cmd="stop atrelay-sig && stop atrelay-itp && stop atrelay-svc && /system/bin/smu -d itp && start atrelay-itp";
service_modem_mode_cmd="stop atrelay-svc && stop atrelay-sig && stop atrelay-itp && sleep 2 && start atrelay-svc && sleep 2";


####### MID INTERNAL SETTINGS #######

# MANDATORY: MID runtime mode. Possible option normal, itp or service.
runtime_mode = "normal";

# Daemonize, run as a daemon
daemonize = false;

# Boot retry attempts. Number of tentative to start the modem
boot_retry = 3;

# System reboot after security data extraction
post_security_reboot = false;

# RFM delay. Used to fake RFM completion for target that does not support AT Ready
normal_rfm_delay = 0;
itp_rfm_delay = 5;
service_rfm_delay = 0;

# Log file. As soon this option is enabled, turn on daemonize as well.
# Otherwise MID will keep the console
# log = "";

# Log debug level. From 0 (minimum debug) to 5 (maximum debug)
log_debug_level = 5;

# PID file
# pid = "";

# Due to missing GPIO support(GPIO_PWRRSTIN) we need to have different
# modes for shutting down modem. Should be removed/dissabled when having PWRRSTIN support.
# Decide whether RESOUT2 going low should be handled as modem is of
# Need in ITP mode where ITP turn of modem without informing MID.
# Modem shutdown mode: 0 = Normal
# 1 = Handle Resout2 low as indication for modem is off
normal_modem_shutdown_mode = 0;
itp_modem_shutdown_mode = 1;
service_modem_shutdown_mode = 0;

####### CRASH DUMP SETTINGS #######
# Crash dump type: 0=Disabled
# 1=Small (header) and Full (header + memory dump)
# 2=Small only (header)

normal_crash_dump_type = 2;




# Directory to place respectively the full and small dump files
# Not used for ITP and Service mode

dump_directory = "/data/ste_modem_full_dumps";
dump_directory_header = "/data/panicreports";





# Directory to place panic detection file (modem_silent_panic or modem_critical_panic)
# Not used for ITP and Service mode

silent_panic_detection_file = "/data/ste_modem_panics/modem_silent_panic";
critical_panic_detection_file = "/data/ste_modem_panics/modem_critical_panic";





# Dump filenames
dump_filename = "full_crash_dump.log";
dump_filename_header = "small_crash_dump.log";

# Add YYYY-MM-DD_HH:MM:SS as dump file name prefix
dump_timestamp = true;

# Maximum number of dumps stored
max_dump_files = 3;

####### MODEM PARAMETERS SECTION #######

# MID modem firmware location, daemon will chroot to this directory


modem_directory = "/cache/ste/modem";







# Firmware upgrade-related settings
normal_modem_fota_dir = "/data/ste/modem_fota";
normal_modem_fota_img_name = "FirmwareDeliveryPackage.upkg";

# Modem version to report. Used to load the appropriate modem library
# OSMIUM - 0x1
# HASSIUM - 0x2
# THORIUM - 0x3
modem_arch = "HASSIUM";

# Turn on bootloader to upload modem firmware on flashless configuration
bootloader = false;

# Enable low battery event subscription

#turn this off as a short-term solution (refer to IKBPINTSTE-229)
normal_enable_low_battery_subscription = false;



itp_enable_low_battery_subscription = false;
service_enable_low_battery_subscription = false;

# Enable high temperature event subscription
normal_enable_high_temperature_subscription = false;
itp_enable_high_temperature_subscription = false;
enable_high_temperature_subscription = false;

# Enable AT channel
normal_enable_mid_atchannel = true;
itp_enable_mid_atchannel = false;
service_enable_mid_atchannel = false;

# Enable AT+CFUN forwarding
normal_enable_efwd_atcfun = true;
itp_enable_efwd_atcfun = false;
service_enable_efwd_atcfun = false;

# Enable AT+CGMR command
normal_enable_atcgmr = true;
itp_enable_atcgmr = false;
service_enable_atcgmr = false;

# Allow AT+CFUN=0. This is fastest way to shutdown OnSwA type modem (GPIO assert is too long).
# Prepare for shutdown (AT+CFUN=100) followed by GPIO ON toggling is the normal (and default) way
# to shutdown OnSwC type modem. So use_atcfun0 should never be set when use_onSwC = true
use_atcfun0 = true;

####### HASSIUM HIGHSPEED INTERFACE SETTINGS ######
# Not used for Service mode

# MID primary device. Used to handshake the modem for firmware upload
# Not used for Service mode
primary_device = "/dev/ttyO2";

# Device type 0 serial 9600, 1 serial 115200, 5 USB
primary_device_mode = 0;

# MID secondary device. High bandwith physical bearer for firmware upload and crashdump
secondary_device = "/dev/hsi0";

# Device type 0 serial 9600, 1 serial 115200, 2 serial 460400, 3 serial 921600, 4 SPI, 5 USB, 6 HSI
secondary_device_mode = 6;

# Configure security data. Unlocked modem only
normal_configure_sec_data = true;
itp_configure_sec_data = false;
service_configure_sec_data = false;

# HSI configuration is symetric for TX and RX channels
# HSI flow type, 0 synchronized
hsi_flow = 0;

# HSI frame size
hsi_frame_size = 31;

# HSI number of channels
hsi_channels = 2;

# HSI divisor (bus speed) 1 = XMhz, 0 = XMhz
hsi_divisor = 1;

# HSI mode 0 SLEEP, 1 STREAM, 2 FRAME
hsi_mode = 1;

# HSI ARB mode 0 mode RR, 1 mode PRIO
hsi_arb_mode = 0;

# USB device name
# usb_id = "";

# USB VID
# usb_vid = 3035; # 0x0bdb

# USB PID
# usb_pid = 4110; # 0x100e

# USB index
# usb_index = 0;

####### OSMIUM FLASHLESS SETTINGS ######

# Static data file name. The path is relative to modem_directory option
# static_data = "";

# Bypass static data upload. Unlocked modem only
# skip_static_data = false;

# ACC 2nd boot stage file name. The path is relative to modem_directory option
# acc_2sbc = "";

# APP 2nd boot stage file name. The path is relative to modem_directory option
# app_2sbc = "";

# EMIF data file name. The path is relative to modem_directory option
# emif_data = "";

# ACC main software file name. The path is relative to modem_directory option
# main_acc = "";

# APP main software file name. The path is relative to modem_directory option
# main_app = "";

####### HASSIUM FLASHLESS SETTINGS ######

# ACC 2nd boot stage file name. The path is relative to modem_directory option
bootrecord_2sbc = "bootrecord_2sbc.bin";

# ACC 3rd boot stage file name. The path is relative to modem_directory option
bootrecord_3sbc = "bootrecord_3sbc.bin";

# ACC patch stage file name. The path is relative to modem_directory option
bootrecord_patch = "bootrecord_patch.bin";

# File storing secure data. R&D unlocked modem only
sec_data_file = "/data/ste/modem/Phone_FS/sys/COPS_DATA_0.csd";

####### FLASHING SETTINGS #######

# Flash external tool path


# %s will be replaced with value of modem_directory or --firm_dir if provided
mfa_cmd = "/system/bin/mfa -m %s --noslave";







# Flash retry attempts. Number of tentative to flash firmware
# Only applicable for Flashed variants
flash_retry = 3;

# Turn off the modem (GPIO) after flash operation

flash_force_pwroff = true;




####### MID GPIOs SETTINGS #######

# GPIO base path. Path to gpioXXX sys class entries

gpio_base_path = "/sys/class/ste";




# GPIO control. Enable modem gpio toggling by the MID
gpio_ctrl = true;

# GPIO reduced control set. For kernel that disables export/unexport/direction for sys/class/gpio entries

stub_gpio_xport_api = true;
stub_gpio_dir_api = true;





# GPIO active low API stub. Some kernel version does not support
# active low GPIO api. Set true if you need to stub it.

stub_aclow_api = true;




# Modem GPIO ONSWA/C configuration details
# Modem power line behaviour. Default is onSwA mode. If trues is set, then onSwA is replaced by onSwC



use_onSwC = false;




gpio_on_id = 54;






gpio_on_aclow = false;
gpio_on_value = 0;

# Modem GPIO RESOUT2 configuration details

gpio_rst2_id = 8;



gpio_rst2_aclow = false;
gpio_rst2_edge = 3; # 0 none, 1 rising, 2 falling, 3 both

# Modem GPIO SERVICE configuration details

gpio_serv_id = 52;



gpio_serv_aclow = true;
gpio_serv_value = 0;

# Modem GPIO PWRRSTIN configuration details

gpio_pwrin_id = 95;
gpio_pwrin_aclow = false;
gpio_pwrin_edge = 3; # 0 none, 1 rising, 2 falling, 3 both






# Modem GPIO PWRRSTOUT configuration details





# gpio_pwrout_id = ;
# gpio_pwrout_aclow = false;
# gpio_pwrout_value = 0;


gpio_service_safe_mode = (

# GPIO 52
 (0x4A100078, 2, 1),
 (0x4A100078, 1, 1),
 (0x4A100078, 0, 1),
 (0x4A100078, 3, 0),
 (0x4A100078, 8, 0));
gpio_service_normal_mode = (
# GPIO 52
 (0x4A100078, 2, 0),
 (0x4A100078, 1, 1),
 (0x4A100078, 0, 1),
 (0x4A100078, 3, 0),
 (0x4A100078, 8, 0));
gpio_out_safe_mode = (
# GPIO 54
 (0x4A10007C, 0, 1),
 (0x4A10007C, 1, 1),
 (0x4A10007C, 2, 1),
 (0x4A10007C, 3, 1),
 (0x4A10007C, 4, 0),
 (0x4A10007C, 8, 0));
gpio_out_normal_mode = (
# GPIO 54
 (0x4A10007C, 0, 1),
 (0x4A10007C, 1, 1),
 (0x4A10007C, 2, 0),
 (0x4A10007C, 3, 0),
 (0x4A10007C, 8, 0));
io_safe_mode = (
# UART1_RX
 (0x4A100138, 16, 1),
 (0x4A100138, 17, 1),
 (0x4A100138, 18, 0),
 (0x4A100138, 19, 1),
 (0x4A100138, 20, 0),
 (0x4A100138, 24, 1),
# UART1_TX
 (0x4A100140, 0, 1),
 (0x4A100140, 1, 1),
 (0x4A100140, 2, 0),
 (0x4A100140, 3, 1),
 (0x4A100140, 4, 0),
 (0x4A100140, 8, 1));
io_normal_mode = (
# UART1_RX
 (0x4A100138, 16, 1),
 (0x4A100138, 17, 0),
 (0x4A100138, 18, 0),
 (0x4A100138, 19, 0),
 (0x4A100138, 20, 0),
 (0x4A100138, 24, 1),
# UART1_TX
 (0x4A100140, 0, 1),
 (0x4A100140, 1, 0),
 (0x4A100140, 2, 0),
 (0x4A100140, 3, 0),
 (0x4A100140, 4, 0),
 (0x4A100140, 8, 0));
reboot_on_failure = true;
cpu_reset_reason = "FATAL MODEM FAILURE";
shutdown_retry = 3;
##############################################################
# R&D settings #
##############################################################
#Crashdump development mode
# -1: Start downloading dump immediatly after MID started.
# 0: Normal mode
# x: Start downloading dump x seconds after MID enters ON
#crashdump_dev_mode = -1;
crashdump_dev_mode = 0;
