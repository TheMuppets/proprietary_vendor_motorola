# *****************************************************
#
# Beceem Connection Manager Server configuration file
#
# *****************************************************

# ============================================================================
# Conventions
# ============================================================================
#
# Boolean values may be entered as
#   For TRUE,  enter: T, Yes, or 1 
#   For FALSE, enter: F, No,  or 0

# ============================================================================
# Network Search parameters
# ============================================================================

# When configuring a network search:
#    - At least one bandwidth value must be specified in the BandwidthMHz list.
#    - For a band scan search, the discrete frequency list must be set to zero. 
#    - For a discrete frequency list search, the 3 band scan parameters must 
#      be set to zero.

# Bandwidth list (Type: Floating point list, Units: MHz)
#    - Valid values: 5, 7, 8.75, and 10
#    - Maximum list length is 4
#    - Bandwidths must be ordered in ascending order
BandwidthMHz                      10

# Frequency band scan parameters:
#   ScanMinFrequencyMHz   (Type: Floating point, Units: MHz)
#   ScanMaxFrequencyMHz   (Type: Floating point, Units: MHz)
#   ScanStepFrequencyMHz  (Type: Floating point, Units: MHz)
# These three define the start and stop frequencies, as well as the frequency
# increment. 
ScanMinFrequencyMHz               0
ScanMaxFrequencyMHz               0
ScanStepFrequencyMHz              0

# Discrete frequency list parameter (Type: Floating point list, Units: MHz)
#    - Valid values: Any valid center frequency.
#    - Maximum list length is determined by the Beceem API library.
#    - Frequencies should be ordered in ascending order.
CenterFrequencyMHz                2508.5 2518.5 2520.25 2528.5 2541.5 2551.5 2561.5 2630.5 2640.5 2650.5 2663.5 2673.5 2683.5 2525 2535 2545 2647 2657 2667 2578 2584 2590 2596 2602 2608

# Network search timeout, in seconds
NetworkSearchTimeoutSec		     60

#Lowpower search mode in shutdown mode
LPSearchInShutDownEnabled	    Yes
# ============================================================================
# Network Entry parameters
# ============================================================================

# Network entry authentication timeout (Type: Integer, Units: sec)
#     Sets the timeout for a single network entry process
# Note: The network entry duration is also limited by the AuthenticationTimeoutSec
#     option.
NetworkEntryTimeoutSec		     20

# Enable selecting BS to do NE based on the CINR or RSS value (Type: Boolean)
# When set to YES, enables the Selection of BS to do NE (among several  
# available BSs) based on their CINR values, the one with the Highest CINR 
# will be chosen to do NE.
# When Set to NO, BS with highest RSSI shall be selected to do NE.
NEToHighestCINRBaseStation	  No

# ============================================================================
# Authentication parameters 
# ============================================================================

# Enable/disable authentication (Type: Boolean)
AuthEnabled                       Yes

# EAP Method (Type: Integer). Valid values are:
#   0 = EAP-TTLS/MSCHAPv2
#   1 = EAP-TTLS/MSCHAPv2 with device certificate
#   2 = EAP-TTLS/CHAP
#   3 = EAP-TTLS/EAP-TLS (not recommended) 
#   4 = EAP-TLS
#   5 = EAP-TTLS/CHAP with device certificate
#   6 = EAP-TTLS/PAP
#   7 = EAP-TTLS/PAP with device certificate

EAPMethod                         4

# User identity and password (Type: String)
#    - UserIdentity is always required. 
#    - UserPassword is ignored for EAP methods 3 and 4, which rely on EAP-TLS.
#UserIdentity                      '002375FFDFB2@clearwire-wmx.net'
#UserIdentity                      '002375FFDFD4@sprintpcs.com'
#UserPassword                      '002375FFDFD4'
UserIdentity                      '002374FFDED0@sprintpcs.com'
UserPassword                      '002374FFDED0'


# Anonymous identity for all EAP-TTLS modes (Type: String)
#    - TTLSAnonymousIdentity is required for all EAP methods except 4.
TTLSAnonymousIdentity             'BE'

# ValidateServerCert (Type: Boolean)
# If 'Yes', the CA certificate is used to validate the server certificate received
#    from the base station.
# If 'No', the server certificate is not validated and CACertFileName is ignored.
ValidateServerCert                Yes

# Path to Certificate authority certificates (Type: String)
#    - Required by all EAP methods.
#    - Must contain a fully qualified path; do not use a relative path.
#    - The specified path must be a folder where CA certs are stored.
#    - Note that, the OpenSSL looks up by the files by CA subject name hash value, 
#      which must hence be available for OpenSSL to read the certificates from the 
#      given path. Use c_rehash utility to create necessary links.
BEGIN WIN32
#CACertPath			  'C:\Beceem\Certs'
END
BEGIN LINUX
CACertPath                        '/system/etc/wimax/certs/'
END
BEGIN OSX
#CACertPath			  '/lib/firmware'
END

# Certificate authority certificate file name (Type: String)
#    - Required by all EAP methods.
#    - Must contain a fully qualified file path; do not use a relative path.
#    - This parameter, need not be present if "CACertPath" parameter is specified 
#    - if specified (whether alone or along with CACertPath), must be set to 
#      a valid file name (that exists), otherwise the authentication will fail.

BEGIN WIN32
CACertFileName                    'C:\Beceem\Certs\cacert.pem'
END
BEGIN LINUX
CACertFileName                    '/system/etc/wimax/certs/wimax_server_root.pem'
#CACertFileName                    '/system/etc/wimax/certs/cacert.pem'
END
BEGIN OSX
CACertFileName                    '/lib/firmware/cacert.pem'
END

# Device certificate, private key, and private key password (Type: String)
#    - The file name parameters must contain a fully qualified file path;
#      OR, if cert/key is located on the device NVM,
#      "DeviceMemSlot" followed by the slot number on the device where the 
#      cert/key is located (e.g., DeviceMemSlot1, DeviceMemSlot2)
#      Valid values for slot numbers are 1 through 4.
#    - For file paths, do not use relative paths.
#    - These parameters are not used by EAP methods 0, 2 & 6.
#    - If the device certificate is signed by a SUBCA, then that SUBCA must 
#      be specified. See TLSDeviceSubCAnCertFileName diectives.
#    - The private key file name is ignored when parameter
#      FirmwareRSAPrivateKeyEncrypt is 'Yes' (see below)
BEGIN WIN32
TLSDeviceCertFileName             'C:\Beceem\Certs\device_cert.pem'
TLSDevicePrivateKeyFileName       'C:\Beceem\Certs\device_private_key.pem'
END
BEGIN LINUX
TLSDeviceCertFileName             'DeviceMemSlot1'
TLSDevicePrivateKeyFileName       'DeviceMemSlot2'
#TLSDeviceCertFileName             '/system/etc/wimax/certs/002375ffdfd4.cer'
#TLSDevicePrivateKeyFileName       '/system/etc/wimax/certs/device6_enc_key.pem'
#TLSDevicePrivateKeyFileName       '/system/etc/wimax/certs/002375ffdfd4_privkey.der'
#TLSDeviceCertFileName             '/system/etc/wimax/certs/DeviceCert.pem'
#TLSDevicePrivateKeyFileName       '/system/etc/wimax/certs/DeviceCertkey.pem'
END 
BEGIN OSX
TLSDeviceCertFileName             '/lib/firmware/device_cert.pem'
TLSDevicePrivateKeyFileName       '/lib/firmware/device_private_key.pem'
END 
#TLSDevicePrivateKeyPassword       'motorola'

# Private key password format (Type: String)
#   Valid values: 'Ascii' or 'Hex' (only the first letter 'A' or 'H' is used)
#    - Hex format can be used only when FirmwareRSAPrivateKeyEncrypt is 'Yes'.
#    - See the 'Beceem cryptographic engine parameters' below for further
#      information on the private key password.
#PrivateKeyPasswordFormat          'Ascii'

# Device SUB CA certificates, (Type: String)
#    - The file name parameters must contain a fully qualified file path; 
#      OR If the Certificate is located on the Device NVM,
#      "DeviceMemSlot" followed by the slot number on device where the 
#      certificate is located (e.g., DeviceMemSlot3, DeviceMemSlot4)
#      Valid values for slot numbers are 1 through 4.
#    - For file paths, do not use relative paths.
#    - The 1st SUBCA certificate (TLSDeviceSubCA1CertFileName) is signed by the RootCA.
#      Required if the 2nd SUBCA or the device certificate is signed by this SUBCA.
#    - The 2nd SUBCA certificate (TLSDeviceSubCA2CertFileName) is signed by the 1st SUBCA.
#      Required if the device certificate is signed by this SUBCA.
BEGIN WIN32	
#TLSDeviceSubCA1CertFileName	  'C:\Beceem\Certs\devSUBCA1.pem'
#TLSDeviceSubCA2CertFileName	  'C:\Beceem\Certs\devSUBCA2.pem'
END
BEGIN LINUX
TLSDeviceSubCA1CertFileName       'DeviceMemSlot3'
TLSDeviceSubCA2CertFileName       'DeviceMemSlot4'
#TLSDeviceSubCA1CertFileName       '/system/etc/wimax/certs/ca1.cer'
#TLSDeviceSubCA2CertFileName       '/system/etc/wimax/certs/ca2.cer'
END 
BEGIN OSX
#TLSDeviceSubCA1CertFileName	 '/lib/firmware/devSUBCA1.pem'
#TLSDeviceSubCA2CertFileName	 '/lib/firmware/devSUBCA2.pem'
END

# EAP supplicant authentication timeout (Type: Integer, Units: sec)
#      Sets the timeout for a single authentication process
# Note: The authentication duration is also limited by the NetworkEntryTimeoutSec
#     option.
AuthenticationTimeoutSec          60

# Special options required by some base stations (Type: Boolean)
InvertMSKByteOrder                No
AlwaysIncludeTLSLength            No

# Maximum EAP fragment size, bytes (should normally be set < 1400 bytes)
EAPFragmentMaxLength              1350

# EAP supplicant polling interval (Type: Integer, Units: ms)
#    - Reduce this value to speed up the supplicant's response. 
#    - Values smaller than 3 ms are not recommended.
EAPPollingLoopIntervalMs          50

# ============================================================================
# Beceem cryptographic engine parameters
# ============================================================================
# The Beceem cryptographic engine is an openssl plugin that allows private key
# encryption to be performed entirely by the device firmware. When the engine
# is enabled, the private key never leaves the device.

# When the engine is enabled, the TLSDevicePrivateKeyPassword parameter
# specifies the AES key used to decrypt the private key stored in device
# EEPROM. This key must be <= 32 bytes long. The key is usually specified
# in Hex format (see PrivateKeyPasswordFormat above)
# Example with a 16 byte key (internally padded with 0x00 to 32 bytes):
 TLSDevicePrivateKeyPassword     '12A9F6C7FCDECD86EDF1B778C22960450A690B7B7E30110C73C009F387D0AC7E'
 PrivateKeyPasswordFormat        'Hex'

# Enable RSA private key encryption in firmware (Type: Boolean)
FirmwareRSAPrivateKeyEncrypt      Yes

# Private key bits for Firmware RSA private key encryption (Type: Integer, Units: bits)
# Valid values: 1024, 2048
FirmwarePrivateKeyBits            2048

# Enable Inner NAI (phase 2 user identity) modification by firmware (Type: Boolean)
InnerNAIChange					  No

# Fully-qualified file path to the Beceem engine shared library (Type: String)
BEGIN WIN32
BeceemEngineFileName              'C:\Beceem\CM\App\Server\engine_beceem.dll'
END
BEGIN LINUX
BeceemEngineFileName              '/system/lib/libengine_beceem.so'
END
BEGIN OSX
BeceemEngineFileName              '/lib/libengine_beceem.dylib'
END

# ============================================================================
# Authentication test mode parameters 
# ============================================================================
# In authentication test mode, the EAP supplicant communicates over a wired 
# Ethernet connection with a RADIUS server.

# Enable authentication test mode (Type: Boolean)
AuthEthernetToRADIUS              No

# Specify the:
#    IP address     (Type: String)
#    IP port number (Type: Integer)
#    RADIUS secret  (Type: String)
# for the RADIUS server.
RADIUSIPAddress                   '192.168.1.100'
RADIUSPort                        1812
RADIUSSecret                      'radius_secret'

# ============================================================================
# Automatic connect and/or disconnect
# ============================================================================

# AutoReConnectEnabled and AutoReDisconnectEnabled (Type: Boolean)
#   Enable automatic connect (after each disconnect) or automatic disconnect
#   (after each connect), respectively.
AutoReConnectEnabled              No
AutoReDisconnectEnabled           No

# Skip network search during automatic re-connection (Type: Boolean)
#   When the value is 'No', a network search is performed before each 
#   re-connection, and the base station with the strongest signal is used
#   for the connect command. When the value is 'Yes', no network search is 
#   performed, and the currently selected base station is used in the 
#   connect command. 
SkipNetSearch                     No

# AutoReConnectIntervalSec and AutoReDisconnectIntervalSec (Type: Integer, 
# Units: sec)
#    These two values specify the delay between disconnect and automatic
#    re-connect, or between connect and automatic re-disconnect, respectively.
AutoReConnectIntervalSec          4
AutoReDisconnectIntervalSec       20

# ============================================================================
# Link status request period (Type: Integer, Units: sec)
# Note: Increasing the value above 5 seconds may result in improper CM Server
#       operation.
# ============================================================================
LinkStatusRequestPeriodSec        2

BEGIN LINUX
# ============================================================================
# IP Refresh (LINUX only)
# ============================================================================

# IP refresh command (Type: String)
# Set this option to the complete command that should be executed to refresh
# the adapter's IP address. This refresh command must not block the CM process,
# but should fork and do its work in the background.
#IPRefreshCommand                  'sh /system/etc/wimax/postNE.sh &'

# IP refresh after network entry (Type: Boolean)
# When this option is set to Yes, the server runs the 'IPRefreshComand' once 
# after network entry completion.
NetEntryIPRefreshEnabled		No

# Terminate DHCP client (Type: Boolean)
# When this option is set to Yes, the server terminates any process whose command 
# line matches exactly the "IPRefreshCommand" value whenever the WiMAX connection
# is terminated or otherwise lost.
TerminateDHCPClient				No

END

# ============================================================================
# File names for firmware and config file load commands
# ============================================================================

# Firmware file name (Type: String)
#   Specifies the complete file path for the firmware binary

# Config file name (Type: String)
#   Specifies the complete file path for the config file. This parameter is
#   not used under Windows XP and Vista.

BEGIN WIN32
FirmwareFileName                  'C:\windows\system32\drivers\macxvi200.bin'
ConfigFileName                    'C:\windows\system32\drivers\macxvi.cfg'
END
BEGIN LINUX
FirmwareFileName                  '/system/etc/wimax/macxvi350.bin'
ConfigFileName                    '/system/etc/wimax/macxvi.cfg'
END
BEGIN OSX
FirmwareFileName                  '/lib/firmware/macxvi350.bin'
ConfigFileName                    '/lib/firmware/macxvi.cfg'
END

# ============================================================================
# Log File parameters
# ============================================================================

# Log File Names
#   When running as a daemon or service, the value must be a fully qualified
#   file path name. Do not specify relative paths.

# --------------------------- CM Server Debug Log ----------------------------
# CM Server debug log level (Type: Integer)
#   Valid values:
#      0 = Off
#      1 = Errors only
#      2 = Normal 
#      3 = Verbose
#      4 = Debug    
CSCMDebugLogLevel                 4

# CM Server debug log filename (Type: String)
#     See 'Log File Names' at the start of this section.
BEGIN WIN32
CSCMDebugLogFileName              'C:\Beceem\CM\CM_Server_Debug.log'
END
BEGIN LINUX
CSCMDebugLogFileName              '/data/tmp/CM_Server_Debug.log'
END
BEGIN OSX
CSCMDebugLogFileName              '/tmp/CM_Server_Debug.log'
END

# CM Server debug log file maximum size
# When the size of the log file exceeds the specified max size, the contents are copied and written into <logfilename>.log.old
# Hence, total Harddisk space required would be CSCMDebugLogFileMaxSizeMB*2.
CSCMDebugLogFileMaxSizeMB	1


# ------------------------ CM Server Authentication Log ----------------------
# Authentication log level (Type: Integer)
#   Valid values are:
#       0 = Off
#       1 = Error
#       2 = Warning
#       3 = Information
#       4 = Debug
#       5 = Message dump
AuthLogLevel                      5

# Authentication log file name (Type: String)
#   Specifies the authentication log file name
#   See 'Log File Names' at the start of this section.
BEGIN WIN32
AuthLogFileName                   'C:\Beceem\CM\CM_Auth.log'
END
BEGIN LINUX
AuthLogFileName                   '/data/tmp/CM_Auth.log'
END
BEGIN OSX
AuthLogFileName                   '/tmp/CM_Auth.log'
END

# Enable writing of Supplicant's debug messages to syslog.
BEGIN LINUX
EnableAuthSysLogPrints              Yes
END

# Authentication log file maximum size
# When the size of the log file exceeds the specified max size, the contents are copied and written into <logfilename>.log.old
# Hence, total Harddisk space required would be AuthLogFileMaxSizeMB*2.
AuthLogFileMaxSizeMB		1

# --------------------------- Beceem Engine Log ------------------------------
# No Beceem engine log is generated when FirmwareRSAPrivateKeyEncrypt is 'No'

# Enable Beceem cryptographic engine logging (Type: Boolean)
EngineLoggingEnabled              Yes

# Engine log file maximum size
# When the size of the log file exceeds the specified max size, the contents are copied and written into <logfilename>.log.old
# Hence, total Harddisk space required would be EngineLogFileMaxSizeMB*2.
EngineLogFileMaxSizeMB		2

# Engine log file name (Type: String)
#   Specifies the Beceem cryptographic engine log file name
#   See 'Log File Names' at the start of this section.
BEGIN WIN32
EngineLogFileName                 'C:\Beceem\CM\CM_Engine.log'
END
BEGIN LINUX
EngineLogFileName                 '/data/tmp/CM_Engine.log'
END
BEGIN OSX
EngineLogFileName                 '/tmp/CM_Engine.log'
END

# --------------------------- RADIUS Client Log ------------------------------
# The RADIUS client log is generated only when AuthEthernetToRADIUS is 'Yes'

# RADIUS client log level (Type: Integer)
#   Valid values are:
#      0 = Off
#      1 = Error
#      2 = Warning
#      3 = Information
#      4 = Debug
#      5 = Message dump
# The radius client log entries are written directly to the console ('stdout'),
# using printf().
RADIUSClientLogLevel             4






